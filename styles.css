/* variables are often declared in the :root selector. This is the highest level selector in CSS; putting your variables there will make them usable everywhere */
:root {
  --building-color1: #aa80ff;
  --building-color2: #66cc99;
  --building-color3: #cc6699;
  --building-color4: #538cc6;
}

* {
  border: 1px solid black;
  box-sizing: border-box;
}

body {
  height: 100vh;
  margin: 0;
  overflow: hidden;
}

/* You will be using almost all percent based units and some flexbox for this project, so everything will be completely responsive. */
.background-buildings {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: flex-end;
  justify-content: space-evenly;
}

/* Variable declarations begin with two dashes (-) and are given a name and a value like this: --variable-name: value; */

/* To use a variable, put the variable name in parentheses with var in front of them like this: var(--variable-name). Whatever value you gave the variable will be applied to whatever property you use it on. */

/* This is the main advantage of using variables, being able to quickly change many values in your style sheet by just changing the value of a variable */
.bb1 {
  width: 10%;
  height: 70%;
  display: flex;
  flex-direction: column;
  align-items: center;
  --building-color1: #aa80ff;
  --building-color2: #66cc99;
}

.bb1a {
  width: 70%;
  height: 10%;
  background-color: var(--building-color1);
}

.bb1b {
  width: 80%;
  height: 10%;
  background-color: var(--building-color1);
}

.bb1c {
  width: 90%;
  height: 10%;
  background-color: var(--building-color1);
}

.bb1d {
  width: 100%;
  height: 70%;
  background-color: var(--building-color1);
}

/* You should add a fallback value to a variable by putting it as the second value of where you use the variable like this: var(--variable-name, fallback-value) */
.bb2 {
  width: 10%;
  height: 50%;
  background-color: var(--building-color2);
}

.bb3 {
  width: 10%;
  height: 55%;
  background-color: var(--building-color3);
}

.bb4 {
  width: 11%;
  height: 58%;
  background-color: var(--building-color4);
}
